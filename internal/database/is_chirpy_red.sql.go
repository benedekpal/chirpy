// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.30.0
// source: is_chirpy_red.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const setChirpyRedStatus = `-- name: SetChirpyRedStatus :one
UPDATE users
SET updated_at = NOW(), is_chirpy_red = $1
WHERE id = $2
RETURNING id, created_at, updated_at, email, is_chirpy_red
`

type SetChirpyRedStatusParams struct {
	IsChirpyRed bool
	ID          uuid.UUID
}

type SetChirpyRedStatusRow struct {
	ID          uuid.UUID
	CreatedAt   time.Time
	UpdatedAt   time.Time
	Email       string
	IsChirpyRed bool
}

func (q *Queries) SetChirpyRedStatus(ctx context.Context, arg SetChirpyRedStatusParams) (SetChirpyRedStatusRow, error) {
	row := q.db.QueryRowContext(ctx, setChirpyRedStatus, arg.IsChirpyRed, arg.ID)
	var i SetChirpyRedStatusRow
	err := row.Scan(
		&i.ID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Email,
		&i.IsChirpyRed,
	)
	return i, err
}
